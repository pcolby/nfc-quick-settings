import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'base'
    id 'com.android.application'
    id 'org.jetbrains.dokka'
    id 'org.jetbrains.kotlin.android'
}

// Optionally, load keystore properties from a file specified via the environment.
def keystoreProperties = new Properties()
def keystorePropertiesFile = System.getenv('KEYSTORE_PROPERTIES_FILE')
if (keystorePropertiesFile) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    signingConfigs {
        if (keystorePropertiesFile) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    namespace = 'au.id.colby.nfcquicksettings'
    compileSdk = 36

    defaultConfig {
        applicationId "au.id.colby.nfcquicksettings"
        minSdk = 24
        targetSdk = 36
        versionCode = 16
        versionName "1.5.0-pre"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            resValue "string", "application_id", "${defaultConfig.applicationId}"
            resValue "string", "build_version",
                    "${defaultConfig.versionName}+${defaultConfig.versionCode}.${System.env.BUILD_ID ?: "local"}.debug"
        }

        release {
            minifyEnabled true
            ndk { debugSymbolLevel = 'FULL' }
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources = true
            if (signingConfigs.hasProperty("release")) signingConfig = signingConfigs.release
            resValue "string", "application_id", "${defaultConfig.applicationId}"
            resValue "string", "build_version",
                    "${defaultConfig.versionName}+${defaultConfig.versionCode}.${System.env.BUILD_ID ?: "local"}"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlin {
        compilerOptions {
            jvmTarget = JvmTarget.JVM_1_8
        }
    }

    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

base {
    archivesName = "${android.defaultConfig.applicationId.replaceFirst("^.*\\.", "")}-" +
            "${android.defaultConfig.versionName}+${android.defaultConfig.versionCode}" +
            ".${System.env.BUILD_ID ?: "local"}"
}

dependencies {
    implementation 'androidx.core:core-ktx:1.17.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.preference:preference:1.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
}
