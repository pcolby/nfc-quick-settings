name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    - name: Setup Build ID
      run: |
        [[ "$MATRIX_OS" == ubuntu* ]] && osName=linux || osName="${MATRIX_OS:0:3}"
        tee -a "$GITHUB_ENV" <<< "BUILD_ID=$GITHUB_RUN_NUMBER.$osName"
      shell: bash
      env:
        MATRIX_OS: ${{ matrix.os }}
    - name: Setup signing KeyStore
      if: github.event_name == 'push' && github.actor != 'dependabot[bot]'
      run: |
        base64 --decode <<< "$JAVA_KEYSTORE_DATA" > "$JAVA_KEYSTORE_FILE"
        JAVA_KEYSTORE_FILE="${JAVA_KEYSTORE_FILE//\\/\\\\}" \
        envsubst < "$GITHUB_WORKSPACE/.github/workflows/keystore.properties" > "$KEYSTORE_PROPERTIES_FILE"
        tee -a "$GITHUB_ENV" <<< "KEYSTORE_PROPERTIES_FILE=$KEYSTORE_PROPERTIES_FILE"
      shell: bash
      env:
        JAVA_KEYSTORE_ALIAS: ${{ secrets.JAVA_KEYSTORE_ALIAS }}
        JAVA_KEYSTORE_DATA: ${{ secrets.JAVA_KEYSTORE_DATA }}
        JAVA_KEYSTORE_FILE: ${{ runner.temp }}/keystore.jks
        JAVA_KEYSTORE_PASSWORD: ${{ secrets.JAVA_KEYSTORE_PASSWORD }}
        KEYSTORE_PROPERTIES_FILE: ${{ runner.temp }}/keystore.properties
    - run: ./gradlew build signingReport
    - id: prep-output
      name: Prep consolidated build outputs
      run: |
        mkdir -p "$RUNNER_TEMP/build-outputs"
        mv 'app/build/outputs' "$RUNNER_TEMP/build-outputs/$MATRIX_OS"
        for buildType in debug release; do
          filePath=$(ls -1 "$RUNNER_TEMP/build-outputs/$MATRIX_OS/apk/$buildType/nfcquicksettings-"*.apk)
          tee -a "$GITHUB_OUTPUT" <<< "${buildType}-filename=${filePath##*/}"
          tee -a "$GITHUB_OUTPUT" <<< "${buildType}-filepath=${filePath}"
        done
      shell: bash
      env:
        MATRIX_OS: ${{ matrix.os }}
    - name: Upload build outputs
      uses: actions/upload-artifact@v4
      with:
        name: build-outputs-${{ matrix.os }}
        path: ${{ runner.temp }}/build-outputs
        if-no-files-found: error
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.prep-output.outputs.debug-filename }}
        path: ${{ steps.prep-output.outputs.debug-filepath }}
        if-no-files-found: error
    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.prep-output.outputs.release-filename }}
        path: ${{ steps.prep-output.outputs.release-filepath }}
        if-no-files-found: error
